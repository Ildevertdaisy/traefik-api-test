version: "3.0"

services:
  gateway:
    image: traefik:v2.11.21
    ports:
      - "80:80"
      - "443:443"
      - "9090:8080"
    environment:
      - CF_DNS_API_TOKEN=<TO_BE_REPLACE>
      # - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./configs:/etc/traefik" 
      - "./certs/:/var/traefik/certs/:rw"
    networks:
      - apicilia_net
  
  whoami:
    image: traefik/whoami
    container_name: whoami-app
    networks:
      - apicilia_net

  email:
      image: mailhog/mailhog
      container_name: email-app
      expose:
        - "8025"
      ports:
        - "8025:8025"
      networks:
         - apicilia_net


  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: <TO_BE_REPLACED>
      POSTGRES_USER: <TO_BE_REPLACED>
      POSTGRES_PASSWORD: <TO_BE_REPLACED>
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
    #   - keycloak-network
    networks:
      - apicilia_net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: <TO_BE_REPLACED>
      KC_DB_PASSWORD: <TO_BE_REPLACED>
      KEYCLOAK_ADMIN: <TO_BE_REPLACED>
      KEYCLOAK_ADMIN_PASSWORD: <TO_BE_REPLACED>
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false      
      KC_HTTP_ENABLED: true
      KC_PROXY_HEADERS: xforwarded
      # KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/kc.crt.pem
      # KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/kc.key.pem
      # KC_HOSTNAME: localhost 
    command:
      - start-dev
      - --http-port=8080
      # - --https-port=8443
    expose:
      - "8080"
    ports:
      - "8080:8080"  # HTTP
      # - "8443:8443"  # HTTPS
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - apicilia_net

volumes:
  postgres_data:
    name: keycloak_postgres_data

networks:
  apicilia_net:
    external: true
